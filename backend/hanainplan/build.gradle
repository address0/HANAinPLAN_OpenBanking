plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.hanainplan'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	// 필수 의존성 (로컬 MySQL 개발용)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	
	// 로컬 개발 시 일시적으로 주석처리 (Docker 환경에서만 사용)
	// implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	// implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	
	// 보안
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// Swagger (OpenAPI 3)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	
	// OpenFeign (REST API 클라이언트)
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	
	// 이메일 발송 (JavaMailSender)
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	
	// 개발 도구
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// MySQL 드라이버 (로컬 MySQL 연결용)
	runtimeOnly 'com.mysql:mysql-connector-j'
	
	// 어노테이션 프로세서
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	
	// 테스트 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// testImplementation 'org.springframework.kafka:spring-kafka-test'
	// testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
